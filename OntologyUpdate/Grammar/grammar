#!/bin/bash
# Parser builder

GRAMMAR="${GRAMMAR:-master.jj}"

# --------------------------------------------------------

function grammar
{
    FILE="$1"
    PKG="$2"
    CLASS="$3"

##     NAME="$(echo $N | tr '[:lower:]' '[:upper:]')"
##     DIR1="$(echo $N | tr '[:upper:]' '[:lower:]')"
    
    DIR="../src/com/hp/hpl/jena/sparql/lang/$PKG"
    echo "---- Process grammar -- $1"
    javacc -OUTPUT_DIRECTORY=$DIR "${FILE}"
    RC=$?

    [ "$RC" = 0 ] || return

##     echo "---- Create HTML"
##     jjdoc -OUTPUT_FILE=${FILE%%.jj}.html "${FILE}"
    echo "---- Create text form"
    jjdoc -TEXT=true -OUTPUT_FILE=${FILE%%.jj}.txt "${FILE}"

 # Fix unnecessary imports
    echo "---- Fixing Java warnings in ${NAME}TokenManager ..."

    F="$DIR/${CLASS}ParserTokenManager.java"

    sed -e 's/import .*//' -e 's/MatchLoop: do/do/' < $F > F
    mv F $F
    echo "---- Done"
}

# --------------------------------------------------------

function rdqlGrammar
{
    # This one uses the old RDQL expression code via JJTree
    (
	echo "---- Process RDQL grammar"
	DIR="../src/com/hp/hpl/jena/sparql/lang/rdql"
	rm -f rdql-arq.jj
	jjtree "-OUTPUT_DIRECTORY=$DIR" rdql-arq.jjt
	RC=$?
	## Move the .jj file back here
	mv $DIR/rdql-arq.jj .
	#echo "RC: $RC"
	if [ "$RC" = "0" ]
	    then
	    javacc -OUTPUT_DIRECTORY=$DIR rdql-arq.jj
	    rm rdql-arq.jj
	fi
    )
}

# --------------------------------------------------------

if [ $# == 0 ]
then
    set -- sparql arq
    ## echo "Usage: grammar [arq|sparql|rdql]" 1>&2
    ## exit 1
    fi

for G in "$@"
do
  case "$G" in
##       arq-path)
##           dos2unix < "master-path.jj" | cpp -P -C -DARQ | unix2dos > arq.jj
##           grammar arq.jj arq ARQ
##           ;;
##       sparql-path)
##           dos2unix < "master-path.jj" | cpp -P -C -DSPARQL | unix2dos > sparql.jj
##           grammar sparql.jj sparql SPARQL
##           ;;
    

      sparql|sparql.jj)
          # The parser that is exactly the working group grammar.
          dos2unix < "$GRAMMAR" | cpp -P -C -DSPARQL | unix2dos > sparql.jj
          grammar sparql.jj sparql SPARQL
          ;;

      arq|arq.jj)
          dos2unix < "$GRAMMAR" | cpp -P -C -DARQ | unix2dos > arq.jj
          grammar arq.jj arq ARQ
          ;;

      rdql) echo "Tread carefully" 1>&2
          rdqlGrammar
          ;;

      all)  grammar sparql
            grammar arq
	    # rdqlGrammar
	    ;;
      *)    echo "**** Unknown grammar: $G" 1>&2
            ;;
    esac
done
